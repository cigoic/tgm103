<div class="container" id="blogApp" />


<div class="blog-area pt-15 pb-100">
    <div class="container">
        <div class="row">
            <template v-for="article in filterArticles" :key="article.id">
                <div class="col-lg-4 col-md-6">
                    <div class="blog-wrap mb-50" data-aos="fade-up" data-aos-delay="200">
                        <div class="blog-img-date-wrap mb-25">
                            <div class="blog-img">
                                <a href="/Blog/Details"><img src="/assets/images/blog/blog-details.png" alt=""></a>
                            </div>
                            <div class="blog-date">
                                <h5 v-if="articleDay(article.modifiedDate)"> {{ aDay }} <span v-if="getMonthName(article.modifiedDate)">{{ aMonth }}</span></h5>
                            </div>
                        </div>

                        <div class="blog-content">
                            <h1>{{ article.title }}</h1>
                            <p v-html="article.description">{{ article.description }}</p>

                            <div class="blog-btn-2 btn-hover">
                                <a class="btn hover-border-radius theme-color" :href="articleLink(article.id)">Read More</a>
                            </div>
                        </div>
                    </div>
                </div>
            </template>
        </div>

        @*分頁*@
        <div class="pagination-style-1" data-aos="fade-up" data-aos-delay="200">
            @*
            <ul>
            <li><a :class="{active:currentPage==n}" v-for="n in 10" href="#">{{n}}</a></li>
            <li><a class="next" href="#"><i class=" ti-angle-double-right "></i></a></li>
            </ul>
            *@

            <paginate :page-count="Math.ceil(articles.length/countPerPage)"
                      :page-range="10"
                      :margin-pages="1"
                      :click-handler="clickCallback"
                      :prev-text="'Prev'"
                      :next-text="'Next'"
                      :container-class="'pagination'"
                      :page-class="'page-item'">
                <span slot="prevContent"><i class=" ti-angle-double-left "></i></span>
                <span slot="nextContent"><i class=" ti-angle-double-right "></i></span>
            </paginate>

        </div>
    </div>
</div>

@section Scripts{

    <script src="https://unpkg.com/vuejs-paginate@1.9.0"></script>
    <script>
        Vue.component('paginate', VuejsPaginate);

        let blogVue = new Vue({
            //el:'#blogApp',
            name: "blogApp",
            data: {
                articles: [],
                articleBaseLink: "/Blog/Details/",
                currentPage: 1,
                countPerPage: 2,
                aDay: null,
                aMonth: null,
            },
            mounted: function () {
                var self = this;
                axios.get("/api/Blog/GetArticles")
                    .then(response => { self.articles = response.data.value })
                    .catch(error => { console.table(error.response.data) })
            },
            computed: {
                filterArticles: function () {
                    console.log(this.articles)
                    var min = this.countPerPage * (this.currentPage - 1 <= 0 ? 0 : this.currentPage - 1);
                    var max = this.countPerPage * this.currentPage;
                    this.min = min;
                    this.max = max;
                    return this.articles.slice(min, max)
                },
            },
            methods: {
                clickCallback: function (page) {
                    this.currentPage = page;
                    console.log(page)
                },
                articleLink(articleId) {
                    return this.articleBaseLink + articleId
                },
                articleDay(currentDate) {
                    var date = new Date(currentDate);
                    this.aDay = date.getDate()
                    return this.aDay
                },
                getMonthName(currentDate) {
                    const date = new Date(currentDate)
                    this.aMonth = date.toLocaleString('default', { month: 'short' })
                    return this.aMonth
                },
            },
        })

        document.addEventListener("DOMContentLoaded", () => {
            blogVue.$mount('#blogApp')
        })
    </script>
}
