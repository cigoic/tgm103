@model WuliKaWu.Data.Article

@{
    ViewData["Title"] = "Create";
}


<div class="container" id="blogCreateApp" />

<h1>Create</h1>

<h4>Article</h4>
<hr />


<div class="row">
    <div class="col-sm-12 col-md-12 col-12">
        <div class="form-group">
            <label for="CreatedDate" class="control-label" hidden></label>
            <input asp-for="CreatedDate" class="form-control" hidden />
        </div>
        <div class="form-group">
            <label for="ModifiedDate" class="control-label" hidden></label>
            <input asp-for="ModifiedDate" class="form-control" hidden />
        </div>
        <div class="form-group">
            <label for="MemberId" class="control-label" hidden></label>
            <select asp-for="MemberId" class="form-control" asp-items="ViewBag.MemberId" hidden></select>
        </div>
        <div class="form-group">
            <label for="Title" class="control-label"></label>
            <input asp-for="Title" class="form-control" type="text" />
        </div>
        <div class="form-group">
            <label id="Content" name="Content" class="control-label"></label>
            <textarea ref="editor" id="Content" name="Content"></textarea>
        </div>
        <template>
            <div class="form-group">
                <label for="CategoryId" class="control-label"></label>
                <select v-model="selectedOption" class="form-control">
                    <option value="">Make a Choice...</option>
                    <option v-for="option in options" :key="option.value" :value="option.value">
                        {{ option.text }}
                    </option>
                </select>
            </div>
        </template>
        <div class="form-group mt-15 mb-15">
            <button type="button" @@click.prevent="handleSubmit()" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>


@section Scripts {
    @{
        // 可能無法驗證 CK Editor
        //await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://cdn.ckeditor.com/ckeditor5/36.0.0/classic/ckeditor.js"></script>

    <script>
        let blogCreateVue = new Vue({
            //el:'#blogCreateApp',
            name: "blogCreateApp",
            data: {
                selectedOption: '',
                options: [
                    { text: 'Uncategorized', value: 0 },
                    { text: 'Blog GridView', value: 1 },
                    { text: 'Latest Blog', value: 2 },
                    { text: 'Our Blog', value: 3 },
                ],
                content: '',
                editor: null,
            },
            mounted: function () {
                ClassicEditor.create(this.$refs.editor, {
                    height: 300,
                })
                console.log("Hi~from Article Create")
            },
            watch: {
                content(newValue) {
                    ClassicEditor.instances[this.$refs.editor.name].setData(newValue);
                },
            },
            methods: {

            },
        })

        document.addEventListener("DOMContentLoaded", () => {
            blogCreateVue.$mount('#blogCreateApp')
        })
    </script>

}
