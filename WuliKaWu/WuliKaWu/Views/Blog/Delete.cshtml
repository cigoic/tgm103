@model WuliKaWu.Data.Article

@{
    ViewData["Title"] = "Delete";
}

<div class="container" id="blogDeleteApp" />

<template>
    <!-- Blog Article -->
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Title</th>
                <th>Content</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="article" :key="index">
                <td>{{ article.id }}</td>
                <td>{{ article.title }}</td>
                <td>{{ article.content }}</td>
                <td>
                    @*<button class="btn btn-primary btn-sm" @@click="selectarticle(article)">Edit</button>*@
                    <button class="btn btn-danger btn-sm" @@click="deleteBlogArticle(article.id)">刪除</button>
                </td>
            </tr>
        </tbody>
    </table>
</template>

@*<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Article</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ModifiedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ModifiedDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Content)
        </dd>
    </dl>

    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>*@

@section Scripts{

    <script>

        let blogDeleteVue = new Vue({
            //el:'#blogDeleteApp',
            name: "blogDeleteApp",
            data: {
                article: @Model,
            },
            mounted: function () {
                var self = this;
                console.log("DELETE:", self.article)
                //axios.get('/api/Blog/GetArticleById')
            },
            methods: {
                // Delete
                handleSubmit: function (id) {
                    axios.post('/api/Blog/Delete', id, {
                        method: "POST",
                    })
                        .then(response => { tgm103ShowSuccess(response.data.message) })
                        .catch(error => { tgm103ShowError(error.response.data.message) })
                },
            }
        })

        document.addEventListener("DOMContentLoaded", () => {
            blogDeleteVue.$mount('#blogDeleteApp')
        })
    </script>
}
