<div class="container" id="blogEditApp" />

<h1>Edit</h1>

<h4>Article</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <input type="hidden" for="Id" />
        <div class="form-group">
            <label for="Title" class="control-label">標題</label>
            <input for="Title" class="form-control" type="text" v-model="title" />
        </div>
        <div class="form-group">
            <label for="CreatedDate" class="control-label"></label>
            <input id="CreatedDate" class="form-control" readonly />
        </div>
        <div class="form-group">
            <label for="ModifiedDate" class="control-label"></label>
            <input id="ModifiedDate" class="form-control" />
        </div>
        <div class="form-group">
            <textarea id="ck" v-model="content"></textarea>
        </div>
        <template>
            <div class="form-group">
                <label for="CategoryId" class="control-label">文章分類</label>
                <select v-model="selectedOption" class="form-control">
                    <option value="">Make a Choice...</option>
                    <option v-for="option in options" :key="option.value" :value="option.value">
                        {{ option.text }}
                    </option>
                </select>
            </div>
        </template>
        <div class="form-group">
            <button type="button" @@click.prevent="handleSubmit" value="修改" class="btn btn-primary" />
        </div>
    </div>
</div>


@section Scripts {
    @{
        //await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.ckeditor.com/ckeditor5/36.0.0/classic/ckeditor.js"></script>

    <script>
        let blogEditVue = new Vue({
            //el: 'blogEditApp',
            data: {
                getArticleFrom: "/api/Blog/GetArticleById/",
                postBaseUrl: "/api/Blog/Edit/",
                article: {},
            },
            mounted: function () {
                let self = this
                self.getArticleFrom = self.getArticleFrom
                axios.get(self.getArticleFrom, @ViewBag.ArticleId)
                    .then(response => { console.log("成功取文:", response.data) })
                    .catch(error => { tgm103ShowError(error.response.data.message) })
            },
            methods: {
                handleSubmit: async function () {
                    try {
                        this.postBaseUrl = this.postBaseUrl + article.id
                        axios.post('/api/Blog/Edit', form, {
                            headers: { 'Content-Type': 'multipart/form-data' }
                            //"Accept": "application/json",
                            //"Content-Type": "application/json",
                            //'Content-Type': 'multipart/form-data'
                            //'Content-Type': 'application/x-www-form-urlencoded'
                        })
                            .then(response => {
                                console.table("成功編輯：", response);
                                tgm103ShowSuccess(response.data.uploaded)
                            })
                            .catch(error => { tgm103ShowError(error.response.data.message) })
                    } catch (error) {
                        tgm103ShowError(error);
                    }
                },
            }
        })

        document.addEventListener("DOMContentLoaded", () => {
            blogEditVue.$mount('#blogEditApp')

        })
    </script>
}
