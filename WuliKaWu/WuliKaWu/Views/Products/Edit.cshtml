@{
    ViewData["Title"] = "Edit";
}

<div id="EditProduct">
    <div class="container m-5">
        <div class="section-title-4 text-center mb-55" data-aos="fade-up" data-aos-delay="200">
            <h2>Edit Product</h2>
        </div>

        <div class="shop-bottom-area">
            <div class="tab-content jump">
                <div class="shop-list-wrap mb-30" data-aos="fade-up" data-aos-delay="200">
                    <div class="row billing-info-wrap">
                        <div class="col-lg-12 col-sm-12 contact-form-style">
                            <div class="shop-list-content">
                                @*商品內容*@
                                <div class="row billing-select select-style">
                                    <div class="col-6 ">
                                        <div class="form-group" hidden>
                                            <label for="ProductId" class="control-label">ProductId</label>
                                            <input id="ProductId" name="ProductId" class="form-control" v-model="productFields.productId" />
                                        </div>
                                        <div class="form-group">
                                            <label for="ProductName" class="control-label">ProductName</label>
                                            <input id="ProductName" name="ProductName" class="form-control" v-model="productFields.productName" />
                                        </div>
                                        <div class="form-group">
                                            <label for="Price" class="control-label">Price</label>
                                            <input id="Price" name="Price" class="form-control" v-model="productFields.price" />
                                        </div>
                                        <div class="form-group">
                                            <label for="SellingPrice" class="control-label">SellingPrice</label>
                                            <input id="SellingPrice" name="SellingPrice" class="form-control" v-model="productFields.sellingPrice" />
                                        </div>

                                        <div class="form-group">
                                            <label for="Comment" class="control-label">Comment</label>
                                            <input id="Comment" name="Comment" class="form-control" v-model="productFields.comment" />
                                        </div>
                                    </div>
                                    <div class="col-6 ">
                                        <div class="form-group">
                                            <label for="Color" class="control-label">Color</label>
                                            <select id="Color" class="form-control" v-model="productFields.colorIds" multiple>
                                                <option v-for="item in optionSource.color" :value="item.id">{{item.type}}</option>
                                            </select>
                                        </div>
                                        <div class="form-group">
                                            <label for="Size" class="control-label">Size</label>
                                            <select id="Size" class="form-control" v-model="productFields.sizeIds">
                                                <option v-for="item in optionSource.size" :value="item.id">{{item.type}}</option>
                                            </select>
                                        </div>

                                        <div class="form-group">
                                            <label for="Category" class="control-label">Category</label>
                                            <select id="Category" class="form-control" v-model="productFields.categoryId">
                                                <option v-for="item in optionSource.category" :value="item.id">{{item.type}}</option>
                                            </select>
                                        </div>

                                        <div class="form-group">
                                            <label for="Tag" class="control-label">Tag</label>
                                            <select id="Tag" class="form-control" v-model="productFields.tagIds" multiple>
                                                <option v-for="item in optionSource.tag" :value="item.id">{{item.type}}</option>
                                            </select>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>
                        @*商品圖片*@
                        <div class="col-lg-12 col-sm-12 contact-form-style">
                            <div class="product-list-img ">
                                <a href="">
                                    <img :src="productFields.picturePath" id="picturePath" alt="Product Picture" />
                                </a>
                            </div>
                        </div>
                        @*商品圖片上傳預覽*@
                        <div class="col-lg-12 col-sm-12 contact-form-style">
                            <div class="form-group mb-4">
                                <label for="PicturePath" class="control-label">Picture</label>
                                <input for="PicturePath" class="form-control" name="PicturePath" type="file" id="fileupload" @@change="uploadPic" multiple />
                            </div>
                            <div class="product-list-img">
                                <div class="row">
                                    <div class="col-3" v-for="item in picPriview">
                                        <img :src="item" class="w-100 img-thumbnail" />
                                    </div>
                                </div>
                            </div>

                            <div class="mt-5">
                                <a href="/Products/Index">Back to List</a>
                            </div>
                        </div>
                        @*儲存編輯按鍵*@
                        <div class="col-lg-12 col-md-3 ms-60 p-80 contact-form-style">
                            <div class="col-lg-12 col-md-12 col-12 p-4 pe-0 contact-us-btn btn-hover">
                                <div>
                                    <button type="button" class="submit" v-on:click="saveProductChange(@ViewBag.id)">Save Edit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

@section Scripts {
    <script>

        let app = new Vue({

            el: "#EditProduct",
            data:
            {
                optionSource: {
                    category: [],
                    color: [],
                    size: [],
                    tag: []
                },
                productFields: {
                    productId: "",
                    productName: "",
                    colorIds: [],
                    sizeId: "",
                    categoryId: "",
                    price: "",
                    discount: "",
                    sellingPrice: "",
                    tagIds: [],
                    picturePath: "",
                    comment: "",
                },
                picPriview: [],
            },

            mounted: function () {
                var self = this;
                this.GetCategoryData();
                this.GetColorData();
                this.GetSizeData();
                this.GetTagData();

                fetch("/api/product/getbyid/" + "@ViewBag.id")

                    .then(function (response) { return response.json() })
                    .then(function (result) {
                        console.log(result);
                        //self.product = result;
                        self.productFields = result;
                        self.productFields.productId = @ViewBag.id;

                    })
            },

            methods:
            {
                uploadPic: function (e) {
                    var self = this;
                    self.productFields.picFiles = e.target.files;
                    self.picPriview = [];
                    for (let fileData of self.productFields.picFiles) {
                        let reader = new FileReader();
                        reader.addEventListener("load", (event) => {
                            self.picPriview.push(event.target.result);
                        });
                        reader.readAsDataURL(fileData)
                    }
                },
                GetCategoryData: function () {
                    var self = this;
                    fetch("/api/category/getall")
                        .then(function (response) { return response.json() })
                        .then(function (result) { self.optionSource.category = result })
                },
                GetColorData: function () {
                    var self = this;
                    fetch("/api/color/getall")
                        .then(function (response) { return response.json() })
                        .then(function (result) { self.optionSource.color = result })
                },
                GetSizeData: function () {
                    var self = this;
                    fetch("/api/size/getall")
                        .then(function (response) { return response.json() })
                        .then(function (result) { self.optionSource.size = result })
                },
                GetTagData: function () {
                    var self = this;
                    fetch("/api/tag/getall")
                        .then(function (response) { return response.json() })
                        .then(function (result) { self.optionSource.tag = result })
                },
                saveProductChange: function (id) {
                    var self = this;
                    self.productFields.productId = @ViewBag.id

                        var qureyEditBaseUrl = '/api/product/editbyid/' + '@ViewBag.id';

                    fetch(qureyEditBaseUrl, {
                        method: "POST",
                        headers: { 'content-type': 'application/json' },
                        body: JSON.stringify(self.productFields)
                    })
                        .then(function (response) { return response.json() })
                        .then(function (result) {
                            console.log(result);
                        })
                }
            }

        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
